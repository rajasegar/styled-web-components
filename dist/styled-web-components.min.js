var t,e;(t=self.document)&&!t.getElementById("livereloadscript")&&((e=t.createElement("script")).async=1,e.src="//"+(self.location.host||"localhost").split(":")[0]+":35729/livereload.js?snipver=1",e.id="livereloadscript",t.getElementsByTagName("head")[0].appendChild(e));const r={background:"background","background-image":"backgroundImage","background-size":"backgroundSize","background-position":"backgroundPosition","background-repeat":"backgroundRepeat"},s=t=>class extends t{static get observedAttributes(){const t=Object.keys(r);return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.host=this.getAttribute("host"),this.applyStyle()}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.host||":host"));return e}applyStyle(){const t=Array.from(this.attributes),e=this.getCSSRule();t.filter((t=>r[t.name])).forEach((t=>{e.style[r[t.name]]=t.value}))}attributeChangedCallback(t,e,s){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,s);this.getCSSRule().style[r[t]]=s}},o={border:"border","border-width":"borderWidth","border-style":"borderStyle","border-color":"borderColor","border-radius":"borderRadius","border-top":"borderTop","border-top-width":"borderTopWidth","border-top-style":"borderTopStyle","border-top-color":"borderTopColor","border-top-left-radius":"borderTopLeftRadius","border-top-right-radius":"borderTopRightRadius","border-bottom":"borderBottom","border-bottom-width":"borderBottomWidth","border-bottom-style":"borderBottomStyle","border-bottom-color":"borderBottomColor","border-bottom-left-radius":"borderBottomLeftRadius","border-bottom-right-radius":"borderBottomRightRadius","border-right":"borderRight","border-right-width":"borderRightWidth","border-right-style":"borderRightStyle","border-right-color":"borderRightColor","border-left":"borderLeft","border-left-width":"borderLeftWidth","border-left-style":"borderLeftStyle","border-left-color":"borderLeftColor","border-x":"noop","border-y":"noop"},a=t=>class extends t{static get observedAttributes(){const t=Object.keys(o);return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.host=this.getAttribute("host"),this.applyStyle()}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.host||":host"));return e}applyStyle(){const t=this.getCSSRule();Array.from(this.attributes).filter((t=>o[t.name])).forEach((e=>{switch(e){case"border-x":t.style.borderLeft=e.value,t.style.borderRight=e.value;break;case"border-y":t.style.borderTop=e.value,t.style.borderBottom=e.value;break;default:t.style[o[e.name]]=e.value}}))}attributeChangedCallback(t,e,r){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);const s=this.getCSSRule();switch(t){case"border-x":s.style.borderLeft=r,s.style.borderRight=r;break;case"border-y":s.style.borderTop=r,s.style.borderBottom=r;break;default:s.style[o[t]]=r}}},i={color:"color",bg:"backgroundColor",opacity:"opacity"},l=t=>class extends t{static get observedAttributes(){const t=["color","bg","opacity"];return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.host=this.getAttribute("host"),this.applyStyle()}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.host||":host"));return e}applyStyle(){const t=Array.from(this.attributes),e=this.getCSSRule();t.filter((t=>i[t.name])).forEach((t=>{e.style[i[t.name]]=t.value}))}attributeChangedCallback(t,e,r){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);this.getCSSRule().style[i[t]]=r}},u={"align-items":"alignItems","align-content":"alignContent","justify-items":"justifyItems","justify-content":"justifyContent","flex-wrap":"flexWrap","flex-direction":"flexDirection",flex:"flex","flex-grow":"flexGrow","flex-shrink":"flexShrink","flex-basis":"flexBasis","justify-self":"justifySelf","align-self":"alignSelf",order:"order"},d=t=>class extends t{static get observedAttributes(){const t=Object.keys(u);return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.host=this.getAttribute("host"),this.applyStyle()}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.host||":host"));return e}applyStyle(){const t=Array.from(this.attributes),e=this.getCSSRule();t.filter((t=>u[t.name])).forEach((t=>{e.style[u[t.name]]=t.value}))}attributeChangedCallback(t,e,r){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);this.getCSSRule().style[u[t]]=r}},b={"grid-gap":"gridGap","grid-row-gap":"gridRowGap","grid-column-gap":"gridColumnGap","grid-column":"gridColumn","grid-row":"gridRow","grid-area":"gridArea","grid-auto-flow":"gridAutoFlow","grid-auto-rows":"gridAutoRows","grid-auto-columns":"gridAutoColumns","grid-template-rows":"gridTemplateRows","grid-template-columns":"gridTemplateColumns","grid-template-areas":"gridTemplateArea"},h=t=>class extends t{static get observedAttributes(){const t=Object.keys(b);return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.host=this.getAttribute("host"),this.applyStyle()}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.host||":host"));return e}applyStyle(){const t=Array.from(this.attributes),e=this.getCSSRule();t.filter((t=>b[t.name])).forEach((t=>{e.style[b[t.name]]=t.value}))}attributeChangedCallback(t,e,r){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);this.getCSSRule().style[b[t]]=r}},n={width:"width",height:"height","min-width":"minWidth","min-height":"minHeight","max-width":"maxWidth","max-height":"maxHeight",size:"size",display:"display","vertical-align":"verticalAlign",overflow:"overflow","overflow-x":"overflowX","overflow-y":"overflowY"},c=t=>class extends t{static get observedAttributes(){const t=Object.keys(n);return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.host=this.getAttribute("host"),this.applyStyle()}applyStyle(){const t=this.getCSSRule();Array.from(this.attributes).filter((t=>n[t.name])).forEach((e=>{"size"===e?(t.style.width=newValue,t.style.height=newValue):t.style[n[e.name]]=e.value}))}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.host||":host"));return e}attributeChangedCallback(t,e,r){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);const s=this.getCSSRule();"size"===t?(s.style.width=r,s.style.height=r):s.style[n[t]]=r}},g={position:"position","z-index":"zIndex",top:"top",right:"right",bottom:"bottom",left:"left"},p=t=>class extends t{static get observedAttributes(){const t=Object.keys(g);return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.host=this.getAttribute("host"),this.applyStyle()}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.host||":host"));return e}applyStyle(){const t=Array.from(this.attributes),e=this.getCSSRule();t.filter((t=>g[t.name])).forEach((t=>{e.style[g[t.name]]=t.value}))}attributeChangedCallback(t,e,r){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);this.getCSSRule().style[g[t]]=r}},y={"text-shadow":"textShadow","box-shadow":"boxShadow"},m=t=>class extends t{static get observedAttributes(){const t=Object.keys(y);return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.host=this.getAttribute("host"),this.applyStyle()}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.host||":host"));return e}applyStyle(){const t=Array.from(this.attributes),e=this.getCSSRule();t.filter((t=>y[t.name])).forEach((t=>{e.style[y[t.name]]=t.value}))}attributeChangedCallback(t,e,r){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);this.getCSSRule().style[y[t]]=r}},f={m:"margin",p:"padding",mt:"marginTop",mr:"marginRight",mb:"marginBottom",ml:"marginLeft",pt:"paddingTop",pr:"paddingRight",pb:"paddingBottom",pl:"paddingLeft",mx:"noop",my:"noop",px:"noop",py:"noop"},S=t=>class extends t{static get observedAttributes(){const t=Object.keys(f);return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.host=this.getAttribute("host"),this.applyStyle()}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.host||":host"));return e}applyStyle(){const t=Array.from(this.attributes),e=this.getCSSRule();t.filter((t=>f[t.name])).forEach((t=>{switch(t){case"mx":e.style.marginRight=t.value,e.style.marginLeft=t.value;break;case"my":e.style.marginTop=t.value,e.style.marginBottom=t.value;break;case"px":e.style.paddingLeft=t.value,e.style.paddingRight=t.value;break;case"py":e.style.paddingBottom=t.value,e.style.paddingTop=t.value;break;default:e.style[f[t.name]]=t.value}}))}attributeChangedCallback(t,e,r){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);const s=this.getCSSRule();switch(t){case"mx":s.style.marginRight=r,s.style.marginLeft=r;break;case"my":s.style.marginTop=r,s.style.marginBottom=r;break;case"px":s.style.paddingLeft=r,s.style.paddingRight=r;break;case"py":s.style.paddingBottom=r,s.style.paddingTop=r;break;default:s.style[f[t]]=r}}},C={"font-family":"fontFamily","font-size":"fontSize","font-weight":"fontWeight","line-height":"lineHeight","letter-spacing":"letterSpacing","text-align":"textAlign","font-style":"fontStyle"},R=t=>class extends t{static get observedAttributes(){const t=Object.keys(C);return super.observedAttributes?[...super.observedAttributes,...t]:t}constructor(){super(),this.applyStyle()}getCSSRule(){const t=this.shadowRoot.styleSheets[0],[e]=Array.from(t.cssRules).filter((t=>t.selectorText===this.getAttribute("host")||":host"));return e}applyStyle(){const t=Array.from(this.attributes),e=this.getCSSRule();t.filter((t=>C[t.name])).forEach((t=>{e.style[C[t.name]]=t.value}))}attributeChangedCallback(t,e,r){super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);this.getCSSRule().style[C[t]]=r}};export{s as BackgroundProps,a as BorderProps,l as ColorProps,d as FlexboxProps,h as GridProps,c as LayoutProps,p as PositionProps,m as ShadowProps,S as SpaceProps,R as TypographyProps};
